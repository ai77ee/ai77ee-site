---
import '../styles/index.css';

import ProfilePicture from '../assets/pfp.png';
import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import ImageGlow from '../components/ImageGlow.astro';
import Icon from '../components/Icon.astro';
import CurrentSong from '../components/CurrentSong.astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import { render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';

const [posts, projects, about, favs, workExperience, quickInfo, socials] =
  await Promise.all([
    getCollection('posts', (post) => post.data.draft !== true),
    getCollection('projects'),
    getEntry('other', 'about'),
    getEntry('other', 'favs'),
    getCollection('workExperience'),
    getCollection('quickInfo'),
    getCollection('socials'),
  ]);

// biome-ignore lint/style/noNonNullAssertion: Should always be defined.
const { Content: About } = await render(about!);
const { Content: Favs } = await render(favs!);
---

<Layout
  title={openGraph.home.title || name}
  description={openGraph.home.description}
  pagefindIgnore
>
  <div class='layout-grid-left' slot='left'>
    <Card class='flex-col-card small-card info-card'>
      <ImageGlow
        class='profile-picture'
        quality={100}
        width={110}
        height={110}
        src={ProfilePicture}
        alt='ai77ee cool profile picture'
        loading='eager'
      />
      <h2 class='info-name'>{name}</h2>
      <ul class='overview-list info-list'>
        {
          quickInfo.map((info) => (
            <li>
              <Icon
                type={info.data.icon.type}
                name={info.data.icon.name as any}
                width={24}
                height={24}
                class='glow-icon'
              />
              <span>{info.data.text}</span>
            </li>
          ))
        }
      </ul>
    </Card>
    <!-- <Card>
      <div class='header-container'>
        <Icon
          type='lucide'
          name='user'
          width={24}
          height={24}
          class='glow-icon'
        />
        <h2>About me</h2>
      </div>
      <div class='prose'>
        <About />
      </div>
    </Card> -->

    <Card class='small-card'>
      <h3 class='no-mt'>Fav things</h3>
      <div class='prose'>
        <Favs />
      </div>
    </Card>
    <CurrentSong />
    <Card class='small-card socials-card'>
      <h3 class='no-mt'>Socials</h3>
      <ul class='overview-list socials-list'>
        {
          socials.map((item) => (
            <li>
              <a
                href={item.data.link}
                class='socials-link'
                title={item.data.text}
              >
                <Icon
                  type={item.data.icon.type}
                  name={item.data.icon.name as any}
                  width={24}
                  height={24}
                  class='glow-icon'
                />
                <span class='social-text'>{item.data.text}</span>
              </a>
            </li>
          ))
        }
      </ul>
    </Card>
  </div>
  <div class='layout-grid-right' slot='right'>
    <Card>
      <div class='header-container'>
        <Icon
          type='lucide'
          name='user'
          width={24}
          height={24}
          class='glow-icon'
        />
        <h2>About me</h2>
      </div>
      <div class='prose'>
        <About />
      </div>
    </Card>
    <Card>
      <div class='header-container'>
        <Icon
          type='lucide'
          name='rss'
          width={24}
          height={24}
          class='glow-icon'
        />
        <h2>Latest Posts</h2>
      </div>
      <div class='content-container'>
        {
          posts
            .sort(
              (a, b) => b.data.createdAt.getTime() - a.data.createdAt.getTime()
            )
            .slice(0, 2)
            .map((post) => (
              <a href={`/blog/${post.id}`} class='post-container'>
                <div class='post-header'>
                  <h3>{post.data.title}</h3>
                  <span class='post-date'>
                    {post.data.createdAt.toLocaleDateString()}
                  </span>
                </div>
                <span>{post.data.description}</span>
              </a>
            ))
        }
      </div>
    </Card>
    <Card>
      <div class='header-container'>
        <Icon
          type='lucide'
          name='folder-git'
          width={24}
          height={24}
          class='glow-icon'
        />
        <h2>Latest Projects</h2>
      </div>
      <div class='content-container'>
        {
          projects
            .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
            .slice(0, 2)
            .map((project) => (
              <a href={`/projects/${project.id}`} class='post-container'>
                <div class='post-header'>
                  <h3>{project.data.title}</h3>
                  <span class='post-date'>
                    {project.data.date.toLocaleDateString()}
                  </span>
                </div>
                <span>{project.data.description}</span>
              </a>
            ))
        }
      </div>
    </Card>
    <!-- 
    <Card>
      <div class='header-container'>
        <Icon
          type='lucide'
          name='briefcase-business'
          width={24}
          height={24}
          class='glow-icon'
        />
        <h2>Work Experience</h2>
      </div>
      <div class='work-experience-container'>
        {
          workExperience.reverse().map((entry) => (
            <div class='work-experience-entry'>
              <span class='work-experience-duration'>
                {entry.data.duration}
              </span>
              <h3 class='work-experience-company'>{entry.data.company}</h3>
              <span class='work-experience-role'>{entry.data.title}</span>
              <p class='work-experience-desc'>{entry.data.description}</p>
            </div>
          ))
        }
      </div>
    </Card>
    -->
  </div>
</Layout>
